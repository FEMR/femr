include "application.conf"

settings.researchOnly=0

db.default.driver="org.testcontainers.jdbc.ContainerDatabaseDriver"
db.default.url="jdbc:tc:mysql:5.6.23://localhost:9001/femr_test?TC_DAEMON=true"

photos.path="./Upload/Pictures/Patients"
photos.encounterPath="./Upload/Pictures/PatientEncounters"
photos.defaultProfilePhoto="./public/img/defaultProfile.png"
csv.path="./Upload/CSV"

internetconnection.enableInternetConnectivityFunctionality = false
internetconnection.sshUser = ""
internetconnection.sshHost = ""
# SSH key that is not password protected
internetconnection.pathToSshKey = ""
# Remote port listening for an SSH connection
internetconnection.remoteSshPort = 0
# Remote port that will forward SSH traffic
internetconnection.remoteSshPortForward = 0
# Local port listening for an SSH conncetion
internetconnection.localSshPort = 0
internetconnection.sshTimeoutInMilliseconds = 100000

tests.functional.webDriverSettings.setOfPossibleWebDrivers = ["htmlunitdriver", "chromedriver"]
tests.functional.webDriverSettings.indexOfWebDriverToUse = 0
//tests.functional.webDriverSettings.chromeDriverPath.OSX = ""
//tests.functional.webDriverSettings.chromeDriverPath.Windows= ""
//tests.functional.webDriverSettings.chromeDriverPath.Linux= ""

test.functional.inventorytest.adminUsername = "test_admin_user@example.org"
test.functional.inventorytest.initialAdminPassword = "Test_Admin_User_Password1" //password requirements as of 2.4.0: >= 8 chars long, >= 1 special char, >= 1 number, >= 1 uppercase, >= 1 lowercase
test.functional.inventorytest.adminFirstName = "TestAdminFirstName"
test.functional.inventorytest.adminLastName = "TestAdminLastName"
test.functional.inventorytest.adminDescription = "About User: Test Admin"
#assume 3 teams
test.functional.inventorytest.testCities = ["TestCity1", "TestCity2", "TestCity3"]
test.functional.inventorytest.testCountries = ["Ukraine", "Ukraine", "Ukraine"]
test.functional.inventorytest.testTeamNames = ["TestTeamName1", "TestTeamName2", "TestTeamName3"]
test.functional.inventorytest.testTeamLocatons = ["TestTeamLocation1", "TestTeamLocation2", "TestTeamLocation3"]
test.functional.inventorytest.testTeamDescriptions = ["TestTeamDescription1", "TestTeamDescription2", "TestTeamDescription3"]
test.functional.inventorytest.testTripStartDates = ["2011-04-01", "2012-04-01", "2013-04-01"]
test.functional.inventorytest.testTripEndDates = ["2011-05-01", "2012-05-01", "2013-05-01"]
#assume testing 3 existing meds
test.functional.inventorytest.countOfExistingMedsToTest = 3
test.functional.inventorytest.existingMedications = ["Pepto Bismol 262 mg bismuth subsalicylate (tab chew)", "Advil 200 mg ibuprofen (tabs)", "Proventil 90 mcg albuterol (MDI)"]
#assume testing 1 custom med with 2 ingredients
test.functional.inventorytest.customMedicationBrandName = "testCustomMedName"
test.functional.inventorytest.customMedicationUnit = "mg"
test.functional.inventorytest.customMedicationForm = "caps"
test.functional.inventorytest.customMedicationIngredients = ["testGeneric1", "testGeneric2"]
test.functional.inventorytest.customMedicationInitialQuantity = "2" #This is a string because fluentium uses strings to fill inputs on forms
test.functional.inventorytest.customMedicationIngredientsStrengths = ["40","60"]


test.functional.inventorytest.enableAudioNotifications = true
test.functional.inventorytest.enableVisualNotifications = false
